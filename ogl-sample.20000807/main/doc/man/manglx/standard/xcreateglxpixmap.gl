_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ $Date$ $Revision$
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(XCreateGLXPixmap,create an off-screen GLX rendering area)
_names(XCreateGLXPixmap)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies the connection to the X server.
_phead(_param2)
Specifies the visual that defines the structure of the rendering area.
It is a pointer to an _xconst(XVisualInfo) structure,
not a visual ID or a pointer to a _xconst(Visual).
_phead(_param3)
Specifies the X pixmap that will be used as the front left color buffer
of the off-screen rendering area.
.SH DESCRIPTION
_cmnd creates an off-screen rendering area and returns its XID.
Any GLX rendering context that was created with respect to _param2
can be used to render into this off-screen area.
Use _cmnd(XMakeCurrent) to associate the rendering area with a GLX
rendering context.
.P
The X pixmap identified by _param3 is used as the front left buffer of the
resulting off-screen rendering area.
All other buffers specified by _param2,
including color buffers other than the front left buffer,
are created without externally visible names.
GLX pixmaps with double-buffering are supported.
However, _cmnd(XSwapBuffers) is ignored by these pixmaps.
.P
Some implementations may not support GLX pixmaps with direct rendering
contexts. 
.SH NOTES
_xconst(XVisualInfo) is defined in \f2Xutil.h.\fP
It is a structure that includes \f2visual\fP, \f2visualID\fP, \f2screen\fP, and
\f2depth\fP elements.
.SH ERRORS
_xconst(BadMatch) is generated if the depth of _param3 does not match
the depth value reported by core X11 for _param2,
or if _param3 was not created with respect to the same screen as _param2.
.P
_xconst(BadValue) is generated
if _param2 is not a valid XVisualInfo pointer (for example, if a
particular GLX implementation does not support this visual).
.P
_xconst(BadPixmap) is generated if _param3 is not a valid pixmap.
.P
_xconst(BadAlloc) is generated if the server cannot allocate the GLX
pixmap.
.SH SEE ALSO
_cmnd(XCreateContext),
_cmnd(XCreatePixmap),
_cmnd(XDestoryGLXPixmap),
_cmnd(XIsDirect),
_cmnd(XMakeCurrent)
