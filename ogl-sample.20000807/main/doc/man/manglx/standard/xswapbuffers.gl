_C_ License Applicability. Except to the extent portions of this file are
_C_ made subject to an alternative license as permitted in the SGI Free
_C_ Software License B, Version 1.1 (the "License"), the contents of this
_C_ file are subject only to the provisions of the License. You may not use
_C_ this file except in compliance with the License. You may obtain a copy
_C_ of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
_C_ Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
_C_ 
_C_ http://oss.sgi.com/projects/FreeB
_C_ 
_C_ Note that, as provided in the License, the Software is distributed on an
_C_ "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
_C_ DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
_C_ CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
_C_ PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
_C_ 
_C_ Original Code. The Original Code is: OpenGL Sample Implementation,
_C_ Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
_C_ Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
_C_ Copyright in any portions created by third parties is as indicated
_C_ elsewhere herein. All Rights Reserved.
_C_ 
_C_ Additional Notice Provisions: The application programming interfaces
_C_ established by SGI in conjunction with the Original Code are The
_C_ OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
_C_ April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
_C_ 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
_C_ Window System(R) (Version 1.3), released October 19, 1998. This software
_C_ was created using the OpenGL(R) version 1.2.1 Sample Implementation
_C_ published by SGI, but has not been independently verified as being
_C_ compliant with the OpenGL(R) version 1.2.1 Specification.
_C_
_C_ $Date$ $Revision$
_C_ The first character in this file must be an '_'!
_C_ Anything on a line after _C_ is ignored
_define(_filters,eqn)_C_
_C_      eqn is automatically replaced with neqn for nroff
_header(XSwapBuffers,exchange front and back buffers)
_names(XSwapBuffers)
.EQ
delim $$
.EN
.SH PARAMETERS
_phead(_param1)
Specifies the connection to the X server.
_phead(_param2)
Specifies the drawable whose buffers are to be swapped.
.SH DESCRIPTION
_cmnd promotes the contents of the back buffer of _param2 to become
the contents of the front buffer of _param2.
The contents of the back buffer then become undefined.
The update typically takes place during the vertical retrace of
the monitor,
rather than immediately after _cmnd is called.
.P
_cmnd performs an implicit _glcmnd(Flush) before it returns.
Subsequent OpenGL commands may be issued immediately after calling _cmnd,
but are not executed until the buffer exchange is completed.
.P
If _param2 was not created with respect to a double-buffered visual,
_cmnd has no effect,
and no error is generated.
.SH NOTES
The contents of the back buffer become undefined after
a swap. Note that this applies to pixel buffers as well as windows.
.P
All GLX rendering contexts share the same notion of which are front buffers
and which are back buffers.
One consequence is that when multiple clients are rendering to the same
double-buffered window,
all of them should finish rendering before one of them issues the command
to swap buffers.
The clients are responsible for implementing this synchronization.
Typically this is accomplished by executing _cmnd(Finish) and then
using a semaphore in shared memory to rendezvous before swapping.
.SH ERRORS
_glxerror(BadDrawable) is generated if _param2 is not a valid GLX drawable.
.P
_glxerror(BadCurrentWindow) is generated if _param1 and _param2 are
respectively the display and drawable associated with the current
context of the calling thread, and _param2 identifies a window that
is no longer valid.
.SH SEE ALSO
_cmnd(Flush)
