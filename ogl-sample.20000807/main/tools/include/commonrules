# License Applicability. Except to the extent portions of this file are
# made subject to an alternative license as permitted in the SGI Free
# Software License B, Version 1.1 (the "License"), the contents of this
# file are subject only to the provisions of the License. You may not use
# this file except in compliance with the License. You may obtain a copy
# of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
# Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
# 
# http://oss.sgi.com/projects/FreeB
# 
# Note that, as provided in the License, the Software is distributed on an
# "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
# DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
# CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
# PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
# 
# Original Code. The Original Code is: OpenGL Sample Implementation,
# Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
# Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
# Copyright in any portions created by third parties is as indicated
# elsewhere herein. All Rights Reserved.
# 
# Additional Notice Provisions: The application programming interfaces
# established by SGI in conjunction with the Original Code are The
# OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
# April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
# 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
# Window System(R) (Version 1.3), released October 19, 1998. This software
# was created using the OpenGL(R) version 1.2.1 Sample Implementation
# published by SGI, but has not been independently verified as being
# compliant with the OpenGL(R) version 1.2.1 Specification.
#
# $Date$ $Revision$
# $Header: //depot/main/tools/include/commonrules#20 $

#
# Notes:
#       - After including $(ROOT)/usr/include/make/commondefs, a makefile may
#         say ``include $(COMMONRULES)'' to get this file.
#       - It is up to the including makefile to define a default rule before
#         including $(COMMONRULES).
#       - The parent makefile must define TARGETS in order for clobber to work.
#       - If the parent makefile must overload the common targets with special
#         rules (e.g. to perform recursive or subdirectory makes), then set
#         COMMONPREF to some unique prefix before including $(COMMONRULES),
#         and make sure that each common target depends on its prefixed name.
#         For example, a makefile which passes common targets and install on
#         to makes in subdirectories listed in DIRS might say
#
#               COMMONPREF=xxx
#               include $(COMMONRULES)
#
#               $(COMMONTARGS) install: $(COMMONPREF)$$@
#                       @for d in $(DIRS); do \
#                               $(ECHO) "\tcd $$d; $(MAKE) $@"; \
#                               cd $$d; $(MAKE) $@; cd ..; \
#                       done
#
#         Thus, all of the common rules plus install are passed to sub-makes
#         *and* executed in the current makefile (as xxxclean, xxxclobber,
#         xxxinstall, etc).  SUBDIRS_MAKERULE in commondefs is a convenience
#         macro that expands to the above loop.
#


#
# cleaning targets
#
$(COMMONPREF)clobber: $(COMMONPREF)clean $(COMMONPREF)rmtargets
ifdef MKDEPFILE
	$(RM) -r $(MKDEPFILE)
endif

$(COMMONPREF)clean:
ifdef DIRT
	$(RM) -r $(DIRT)
endif

$(COMMONPREF)rmtargets:
ifdef TARGETS
	$(RM) -r $(TARGETS)
endif

#
# targets to build distributions
#
-include $(DISTFILE)

# build SI distribution
$(COMMONPREF)distsi:
	@$(INSTALL) $(INSTALLFLAGS) -F $(DIST)/$(DISTDIR_SI) $(DISTFILES_SI)
	@$(ECHO) ""

# build OSS distribution
$(COMMONPREF)distoss:
	@$(INSTALL) $(INSTALLFLAGS_OSS) -F $(DIST)/$(DISTDIR_OSS) $(DISTFILES_OSS)
	@$(ECHO) ""

#
# additional target for .cxx files.  (gmake only likes .C and .cc)
#
%.o : %.cxx
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

#
# preprocessor only target
#
%.i : %.c
	$(CC) -E $(CPPFLAGS) $(CFLAGS) $< | $(SED) -e 's/^ $$//' | $(UNIQ) > $@

%.i : %.cc %.C %.cxx
	$(CXX) -E $(CPPFLAGS) $(CXXFLAGS) $< | $(SED) -e 's/^ $$//' | $(UNIQ) > $@

#
# include the make dependency file(s), if they exist
#
-include $(MKDEPFILE)

#
# Local make rules
#
-include $(LOCALRULES)
